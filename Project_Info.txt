Text Bomber Project

This project comes from a project originally on StackOverflow. Programs and companies exist for email marketing, but those companies do not allow on-demand access to the mailer. The purpose of this project is many-fold - at the surface, it is a way to bug the crap out of other students and/or stress-test Apple’s Messaging app. I have been able to uncover surface level information about the way that iOS manages stress from a preloaded app. The OS seems to have a prioritization system for the stock apps, and the only way to bypass this is to turn off notifications. 
Putting the receiving device into a Do Not Disturb mode will silence the audible ring, but it will not stop notifications. Push notifications will continue to deliver the messages, and the red badge icon will continue to reflect this. The memory use seems to be quite similar in DND, though, as other processes and apps will still suffer from a lack of available RAM.

The only real remedy to stop the barrage of crap messages that I have found so far is to block the sender early. After a few hundred messages, the app runs so slowly that navigating to the block screen is close to impossible. 

The files are labeled poorly but in a simplistic way. The original unmolested code does not have any modifiers, while the copies with special features do. In the coming days, I hope to have several different variations. The original is very simple - it will continue to send messages as fast as humanly possible to a target iMessage address until the stop button is pressed in the script shell. 

The variations are pending. They include - the ability to start a spammy group chat with the same parameters and several different payloads including links to info-stealers and utilities which will crash the user’s browser. Due to the native sandboxing of the OS, there should be no lasting harm done to a device provided the user can perform both a hard reset and keep the device on a power source.